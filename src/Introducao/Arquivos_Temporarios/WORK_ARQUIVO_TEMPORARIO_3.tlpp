#include 'totvs.ch'

/*/{Protheus.doc} U_WORK_ARQUIVO_TEMPORARIO_3
    Cria arquivos temporários para não causar lixo de memória
    @author Eu

    @see https://tdn.totvs.com/display/tec/TCCanOpen    
    @see https://tdn.totvs.com/display/tec/TCDelFile    
    @see https://tdn.totvs.com/display/tec/DBCreate    
    @see https://tdn.totvs.com/display/tec/DBCreateindex    
    @see https://tdn.totvs.com/display/tec/DBAppend
    @see https://tdn.totvs.com/display/tec/DBCommit    
    @see https://tdn.totvs.com/display/tec/DBSetIndex    
/*/

Function U_WORK_ARQUIVO_TEMPORARIO_3

	rpcSetEnv('99','01')

	aCampos     := {{"ENTIDADE","C",3,0},{"CODIGO","C",6,0},{"LOJA","C",2,0},{"NOME","C",30,0},{"DTNASC","D",8,0}}
	cAliasTab   := "TAB_ENTIDADES"

	IF tcCanOpen(cAliasTab) //verifica se o arquivo existe
		tcDelFile(cAliasTab) //se o arquivo já existir, deverá ser deletado, porque é temporário
	EndIF

	dbCreate(cAliasTab,aCampos,"TOPCONN") //1-alias, 2-estrutura, 3-local
	dbUseArea(.T.,"TOPCONN",cAliasTab,cAliasTab,.T.,.F.) //1-inicia, 2-local, 3-nome, 4-apelido, 5-compartilhado, 6-somente leitura
	dbCreateIndex(cAliasTab+'1',"CODIGO+LOJA+ENTIDADE",{|| CODIGO+LOJA+ENTIDADE}) //cria indices de pesquisa. 1-nome, 2-filtro, 3-repete no bloco
	dbSetIndex(cAliasTab+'1') //indica ao código que vai usar o indice criado

	SA1->(dbSetOrder(1))

	While .not. SA1->(eof())

		dbAppend()
		ENTIDADE            := "SA1"
		CODIGO              := SA1->A1_COD
		LOJA                := SA1->A1_LOJA
		NOME                := SA1->A1_NOME
		DTNASC              := SA1->A1_DTNASC
		dbCommit()

		SA1->(dbSkip())

	Enddo

	SA2->(dbSetOrder(1))

	While .not. SA2->(eof())

		dbAppend()
		ENTIDADE            := "SA2"
		CODIGO              := SA2->A2_COD
		LOJA                := SA2->A2_LOJA
		NOME                := SA2->A2_NOME
		DTNASC              := SA2->A2_DTNASC
		dbCommit()

		SA2->(dbSkip())

	Enddo

	tcDelFile(cAliasTab)

	rpcClearEnv()

Return
