#include 'totvs.ch'

Function U_WORK_ARQUIVO_TEMPORARIO_2

	Local oTempTable as object
	Local cAliasTemp as character
	Local cRealName as character

	rpcSetEnv('99', '01')

	cAliasTemp := 'TRBSA1SA2'
	oTempTable := fwTemporaryTable():new(cAliasTemp)
	oTempTable:setFields({{"ENTIDADE", "C",3,0},{"CODIGO", "C",6,0},{"LOJA","C",2,0},{"NOME","C",30,0}})
	oTempTable:addIndex("IND_1",{"CODIGO","LOJA","ENTIDADE"})
	oTempTable:create()

	cRealName := oTempTable:getRealName()

	dbSelectArea("SA1")
	dbSetOrder(1)

	while .not. eof()
		(cAliasTemp)->(reclock(alias(),.T.), CODIGO := SA1->A1_COD, LOJA := SA1->A1_LOJA, NOME := SA1->A1_NOME, ENTIDADE := SA1->(alias()),msunlock())
		dbSkip()
	enddo

	dbSelectArea("SA2")
	dbSetOrder(1)

	while .not. eof()
		(cAliasTemp)->(reclock(alias(),.T.), CODIGO := SA2->A2_COD, LOJA := SA2->A2_LOJA, NOME := SA2->A2_NOME, ENTIDADE := SA2->(alias()),msunlock())
		dbSkip()
	enddo

	cTxt := "ENTIDADE;CODIGO;LOJA;NOME"

	(cAliasTemp)->(DBsETORDER(1),dbEval({|| cTxt += CRLF + ENTIDADE + ';' + CODIGO + ';' + NOME}))

	cArquivo := "C:\TOTVS\ListaEntidades.csv"
	lArquivo := memoWrite(cArquivo,cTxt)// recebe dois parametros, o nome do arquivo e o arquivo que está populado os dados

	(cAliasTemp)->(dbCloseArea())

	oTempTable:delete()

	rpcClearEnv()

Return
